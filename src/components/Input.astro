---
const {
  input={},
  label='',
  feedback='',
  placeHolder='',
} = Astro.props

const {
  field:Control,
  required=false,
  value='',
  ...attrs
} = input
---

<div class="wrapper-input">
  {label && (
    <label 
      class="visually-hidden"
      htmlFor={`input-${input.name}`}
    >{label}</label>
  )}

{input.field === 'textarea' ? (
    <Control
      {...attrs}
      id={`input-${input.name}`}
      autoComplete="off"
      placeholder={placeHolder}
      label={label}
      class={`${input.valid ? 'valid' : 'invalid'} form-control form-control-40`}
      aria-describedby={`validation-${input.name}-feedback`}
      required={required ? 'true' : 'false'}
    >{value}</Control>
  ) : (
    <Control
      {...attrs}
      id={`input-${input.name}`}
      autoComplete="off"
      placeholder={placeHolder}
      label={label}
      class={`${input.valid ? 'valid' : 'invalid'} form-control form-control-40`}
      aria-describedby={`validation-${input.name}-feedback`}
      required={required ? 'true' : 'false'}
      value={value}
    />
  )}

  {feedback && (
    <div id={`validation-${input.name}-feedback`} class="invalid-feedback">
      {feedback}
    </div>
  )}
</div>
